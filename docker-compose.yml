version: '3.8'

services:
  postgres:
    image: postgres:15
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    restart: unless-stopped
    volumes:
      - ./backend:/app
      - /app/node_modules
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app_network
    ports:
      - "5000:5000"
    command: npm run dev

  frontend:
    build: ./frontend
    restart: unless-stopped
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/dist
    depends_on:
      - backend
    networks:
      - app_network
    ports:
      - "3000:3000"
    command: npm run dev

volumes:
  postgres_data:

networks:
  app_network:
    driver: bridge